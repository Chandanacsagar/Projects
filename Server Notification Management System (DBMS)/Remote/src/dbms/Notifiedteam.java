/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Notifiedteam.java
 *
 * Created on Dec 24, 2022, 9:56:31 AM
 */
package dbms;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LENOVO
 */
public class Notifiedteam extends javax.swing.JFrame {

    /** Creates new form home */
    public Notifiedteam() {
        initComponents();
         Dimension sz=Toolkit.getDefaultToolkit().getScreenSize();
        this.setSize(sz.width,sz.height);
        
          Connect();
          check_new_notifications();
              }
    /*admin ADMIN = new admin();
    admin EMPLOYEE = new admin();
    orgde HOME = new orgde();
    org LOGOUT = new org();*/
  Connection con;
  PreparedStatement pst;
    Statement sss;
    
    public void check_new_notifications()
    {
          try {
            Statement st=con.createStatement();
            ResultSet rss=st.executeQuery("select count(*) as C from admin,employee,notification_team where "
                    + "admin.Emp_ID=employee.Emp_ID and employee.Org_ID=notification_team.Org_ID and "
                    + "nst=0 and NotifID='"+notifylo.nuid+"'");
            if(rss.next())
            {
                int c=rss.getInt(1);
                if(c>0)
                {
                    JOptionPane.showMessageDialog(this,"You have "+c+" new notifications");
                }
            }
            
          }
          catch(Exception e)
          {
              e.printStackTrace();
          }
    }
    public void Connect()
    {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try{
                 con = DriverManager.getConnection("jdbc:mysql://localhost:3306/sms","root","oracle");
                System.out.println("connected");
            } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(orgde.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        } catch (ClassNotFoundException ex) {
            //Logger.getLogger(orgde.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
    
    private void table_update()
    {
        int CC;
        try {
            Statement st=con.createStatement();
            ResultSet rss=st.executeQuery("select * from notification_team where NotifID='"+notifylo.nuid+"'");
            rss.next();
            int oid=rss.getInt("Org_ID");
            pst = con.prepareStatement("SELECT E.Emp_ID,E.Org_ID,E.SID,E.Status,S.IPAddress,A.Severity,A.ServerFailedDate,A.Reason from Employee E join Admin A on E.Emp_ID=A.Emp_ID join Server S on E.SID=S.SID where E.Status='Inactive' and E.Org_ID="+oid);
            ResultSet Rs= pst.executeQuery();
            
            ResultSetMetaData RSMD = Rs.getMetaData();
            CC = RSMD.getColumnCount();
            DefaultTableModel DFT = (DefaultTableModel) notiftable.getModel();
            
            DFT.setRowCount(0);
            
            while (Rs.next()) {
                Vector v2 = new Vector();
                for(int i=1;i<=CC;i++){
                   v2.add(Rs.getInt("Emp_ID"));
                   v2.add(Rs.getString("Org_ID"));
                   v2.add(Rs.getString("SID"));
                   v2.add(Rs.getString("Status"));
                   v2.add(Rs.getString("IPAddress")); 
                   v2.add(Rs.getString("Severity"));
                   v2.add(Rs.getString("ServerFailedDate"));
                   v2.add(Rs.getString("Reason"));
                }
                DFT.addRow(v2);    
            }
            }catch(Exception e){
                System.out.println(e);
                System.out.println("2");

                
            }
        }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        notiftable = new javax.swing.JTable();
        VIEW = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Bodoni MT Black", 3, 36)); // NOI18N
        jLabel3.setText("NOTIFIED TEAM");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(90, 50, 400, 60);

        notiftable.setBackground(new java.awt.Color(51, 51, 51));
        notiftable.setForeground(new java.awt.Color(0, 204, 204));
        notiftable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "EmpID", "Org_ID", "SID", "Status", "IPaddress", "Severity", "ServerFailureDateTime", "Reason"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        notiftable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                notiftableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(notiftable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1080, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(30, 130, 1080, 110);

        VIEW.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        VIEW.setForeground(new java.awt.Color(102, 0, 51));
        VIEW.setText("VIEW");
        VIEW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VIEWActionPerformed(evt);
            }
        });
        jPanel1.add(VIEW);
        VIEW.setBounds(880, 60, 80, 30);

        logout.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        logout.setText("LOG OUT");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        jPanel1.add(logout);
        logout.setBounds(850, 30, 110, 30);

        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\DELL 3493\\OneDrive\\Desktop\\background\\ALERT.jpg")); // NOI18N
        jPanel1.add(jLabel4);
        jLabel4.setBounds(470, 50, 70, 50);

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\DELL 3493\\OneDrive\\Desktop\\background\\emlolo.jpg")); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, -100, 1320, 910);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1326, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void VIEWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VIEWActionPerformed
         jPanel2.setVisible(true);
        
            // HOME.setVisible(true);// TODO add your handling code here:
           try{
               
            String query="SELECT A.Emp_ID,E.Org_ID,E.SID,E.Status,S.IPAddress,A.Severity,A.ServerFailedDate,A.Reason from Employee E join Admin A on E.Emp_ID=A.Emp_ID join Server S on E.SID=S.SID where E.Status='Inactive';";
            pst=con.prepareStatement(query);
            ResultSet rs= pst.executeQuery();
            Statement st=con.createStatement();
            ResultSet rss=st.executeQuery("select employee.Emp_ID from admin,employee,notification_team where "
                    + "admin.Emp_ID=employee.Emp_ID and employee.Org_ID=notification_team.Org_ID and "
                    + "nst=0 and NotifID='"+notifylo.nuid+"'");
            while(rss.next())
            {
                int eid=rss.getInt(1);
                PreparedStatement pst1=con.prepareStatement("update admin set nst=1  where Emp_ID="+eid);
                pst1.executeUpdate();
                
            }
           
            table_update();
           }
           catch(Exception e){
           e.printStackTrace();}
        
         
         
               
    }//GEN-LAST:event_VIEWActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        dispose();
        org o=new org();
        o.setVisible(true);
        logout.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_logoutActionPerformed

    private void notiftableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_notiftableMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_notiftableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Notifiedteam().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton VIEW;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logout;
    private javax.swing.JTable notiftable;
    // End of variables declaration//GEN-END:variables
}
